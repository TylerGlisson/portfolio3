(window.webpackJsonp=window.webpackJsonp||[]).push([[0],{10:function(e,n,t){e.exports=t(20)},15:function(e,n,t){},18:function(e,n,t){},20:function(e,n,t){"use strict";t.r(n);var a=t(0),s=t.n(a),o=t(4),i=t.n(o),r=(t(15),t(5)),l=t(6),d=t(8),h=t(7),u=t(9),p=t(1),c=t(2),m=t.n(c),w=(t(18),t(2)),y=new w.Renderer;y.link=function(e,n,t){return'<a target="_blank" href="'+e+'">'+t+"</a>"},w.setOptions({renderer:y,gfm:!0,tables:!0,breaks:!0,pedantic:!1,sanitize:!0,smartLists:!0,smartypants:!0}),console.log(y);var g=function(e){function n(e){var t;return Object(r.a)(this,n),(t=Object(d.a)(this,Object(h.a)(n).call(this,e))).updateInput=function(e){t.setState({editorInput:e.target.value}),console.log(t.state.editorInput)},t.state={editorInput:'\nMarkdown Quick Reference\n========================\n\nThis guide is a very brief overview, with examples, of the syntax that [Markdown] supports.  It is itself written in Markdown and you can copy the samples over to the left-hand pane for experimentation.  It\'s shown as *text* and not *rendered HTML*.\n\n[Markdown]: http://daringfireball.net/projects/markdown/\n\n\nSimple Text Formatting\n======================\n\nFirst thing is first.  You can use *stars* or _underscores_ for italics.  **Double stars** and __double underscores__ do bold.  ***Three together*** do ___both___.\n\nParagraphs are pretty easy too.  Just have a blank line between chunks of text.\n\n> This chunk of text is in a block quote.  Its multiple lines will all be\n> indended a bit from the rest of the text.\n>\n> > Multiple levels of block quotes also work.\n\nSometimes you want to include some code, such as when you are explaining how `<h1>` HTML tags work, or maybe you are a programmer and you are discussing `someMethod()`.\n\nIf you want to include some code and have\nnewlines preserved, indent the line with a tab\nor at least four spaces.\nExtra spaces work here too.\nThis is also called preformatted text and it is useful for showing examples.\nThe text will stay as text, so any *markdown* or <u>HTML</u> you add will\nnot show up formatted.  This way you can show markdown examples in a\nmarkdown document.\n\n>     You can also use preformatted text with your blockquotes\n>     as long as you add at least five spaces.\n\n\nHeadings\n========\n\nThere are a couple of ways to make headings.  Using three or more equals signs on a line under a heading makes it into an "h1" style.  Three or more hyphens under a line makes it "h2" (slightly smaller).  You can also use multiple pound symbols before and after a heading.  Pounds after the title are ignored.  Here\'s some examples:\n\nThis is H1\n==========\n\nThis is H2\n----------\n\n# This is H1\n## This is H2\n### This is H3 with some extra pounds ###\n#### You get the idea ####\n##### I don\'t need extra pounds at the end\n###### H6 is the max\n\n\nLinks\n=====\n\nLet\'s link to a few sites.  First, let\'s use the bare URL, like <http://www.github.com>.  Great for text, but ugly for HTML.\nNext is an inline link to [Google](http://www.google.com).  A little nicer.\nThis is a reference-style link to [Wikipedia] [1].\nLastly, here\'s a pretty link to [Yahoo].  The reference-style and pretty links both automatically use the links defined below, but they could be defined *anywhere* in the markdown and are removed from the HTML.  The names are also case insensitive, so you can use [YaHoO] and have it link properly.\n\n[1]: http://www.wikipedia.org/\n[Yahoo]: http://www.yahoo.com/\n\nTitle attributes may be added to links by adding text after a link.\nThis is the [inline link](http://www.bing.com "Bing") with a "Bing" title.\nYou can also go to [W3C] [2] and maybe visit a [friend].\n\n[2]: http://w3c.org (The W3C puts out specs for web-based things)\n[Friend]: http://facebook.com/ "Facebook!"\n\nEmail addresses in plain text are not linked: test@example.com.\nEmail addresses wrapped in angle brackets are linked: <test@example.com>.\nThey are also obfuscated so that email harvesting spam robots hopefully won\'t get them.\n\n\nLists\n=====\n\n* This is a bulleted list\n* Great for shopping lists\n- You can also use hyphens\n+ Or plus symbols\n\nThe above is an "unordered" list.  Now, on for a bit of order.\n\n1. Numbered lists are also easy\n2. Just start with a number\n3738762. However, the actual number doesn\'t matter when converted to HTML.\n1.  This will still show up as 4.\n\nYou might want a few advanced lists:\n\n- This top-level list is wrapped in paragraph tags\n- This generates an extra space between each top-level item.\n\n- You do it by adding a blank line\n\n- This nested list also has blank lines between the list items.\n\n- How to create nested lists\n1.  Start your regular list\n2.  Indent nested lists with four spaces\n3.  Further nesting means you should indent with four more spaces\n* This line is indented with eight spaces.\n\n- List items can be quite lengthy.  You can keep typing and either continue\nthem on the next line with no indentation.\n\n- Alternately, if that looks ugly, you can also\nindent the next line a bit for a prettier look.\n\n- You can put large blocks of text in your list by just indenting with four spaces.\n\nThis is formatted the same as code, but you can inspect the HTML\nand find that it\'s just wrapped in a `<p>` tag and *won\'t* be shown\nas preformatted text.\n\nYou can keep adding more and more paragraphs to a single\nlist item by adding the traditional blank line and then keep\non indenting the paragraphs with four spaces.  You really need\nto only indent the first line, but that looks ugly.\n\n- Lists support blockquotes\n\n> Just like this example here.  By the way, you can\n> nest lists inside blockquotes!\n> - Fantastic!\n\n- Lists support preformatted text\n\nYou just need to indent eight spaces.\n\n\nEven More\n=========\n\nHorizontal Rule\n---------------\n\nIf you need a horizontal rule you just need to put at least three hyphens, asterisks, or underscores on a line by themselves.  You can also even put spaces between the characters.\n\n---\n****************************\n_ _ _ _ _ _ _\n\nThose three all produced horizontal lines.  Keep in mind that three hyphens under any text turns that text into a heading, so add a blank like if you use hyphens.\n\nImages\n------\n\nImages work exactly like links, but they have exclamation points in front.  They work with references and titles too.\n\n![Google Logo](http://www.google.com/images/errors/logo_sm.gif) and ![Happy].\n\n[Happy]: http://www.wpclipart.com/smiley/simple_smiley/smiley_face_simple_green_small.png ("Smiley face")\n\n\nInline HTML\n-----------\n\nIf markdown is too limiting, you can just insert your own <strike>crazy</strike> HTML.  Span-level HTML <u>can *still* use markdown</u>.  Block level elements must be separated from text by a blank line and must not have any spaces before the opening and closing HTML.\n\n<div style=\'font-family: "Comic Sans", sans-serif;\'>\nIt is a pity, but markdown does **not** work in here for most markdown parsers.  [Marked] handles it pretty well.\n</div>\n      '},t.updateInput=t.updateInput.bind(Object(p.a)(Object(p.a)(t))),t}return Object(u.a)(n,e),Object(l.a)(n,[{key:"render",value:function(){var e={__html:m()(this.state.editorInput)};return s.a.createElement("div",{className:"App"},s.a.createElement("div",{className:"editorDiv"},s.a.createElement("textarea",{value:this.state.editorInput,name:"editor",id:"editor",cols:"1",onInput:this.updateInput})),s.a.createElement("div",{className:"previewDiv"},s.a.createElement("div",{className:"preview",id:"preview",dangerouslySetInnerHTML:e})))}}]),n}(a.Component);i.a.render(s.a.createElement(g,null),document.getElementById("root"))}},[[10,2,1]]]);
//# sourceMappingURL=main.4ad71f56.chunk.js.map